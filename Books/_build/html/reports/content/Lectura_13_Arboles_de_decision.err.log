Traceback (most recent call last):
  File "/home/andres-campos/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/andres-campos/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/andres-campos/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/andres-campos/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/andres-campos/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/andres-campos/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df_dt = df.copy()
df_dt = pd.read_parquet(url_base + "Logistic_Regression_1.parquet",)
df_dt["tasa_de_interes"] = df_dt["tasa_de_interes"].str.replace("%", "").astype("float")
df_dt
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyboardInterrupt[0m                         Traceback (most recent call last)
Cell [0;32mIn[13], line 2[0m
[1;32m      1[0m df_dt [38;5;241m=[39m df[38;5;241m.[39mcopy()
[0;32m----> 2[0m df_dt [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mread_parquet[49m[43m([49m[43murl_base[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mLogistic_Regression_1.parquet[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m)[49m
[1;32m      3[0m df_dt[[38;5;124m"[39m[38;5;124mtasa_de_interes[39m[38;5;124m"[39m] [38;5;241m=[39m df_dt[[38;5;124m"[39m[38;5;124mtasa_de_interes[39m[38;5;124m"[39m][38;5;241m.[39mstr[38;5;241m.[39mreplace([38;5;124m"[39m[38;5;124m%[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m"[39m)[38;5;241m.[39mastype([38;5;124m"[39m[38;5;124mfloat[39m[38;5;124m"[39m)
[1;32m      4[0m df_dt

File [0;32m~/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/pandas/io/parquet.py:667[0m, in [0;36mread_parquet[0;34m(path, engine, columns, storage_options, use_nullable_dtypes, dtype_backend, filesystem, filters, **kwargs)[0m
[1;32m    664[0m     use_nullable_dtypes [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[1;32m    665[0m check_dtype_backend(dtype_backend)
[0;32m--> 667[0m [38;5;28;01mreturn[39;00m [43mimpl[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m
[1;32m    668[0m [43m    [49m[43mpath[49m[43m,[49m
[1;32m    669[0m [43m    [49m[43mcolumns[49m[38;5;241;43m=[39;49m[43mcolumns[49m[43m,[49m
[1;32m    670[0m [43m    [49m[43mfilters[49m[38;5;241;43m=[39;49m[43mfilters[49m[43m,[49m
[1;32m    671[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    672[0m [43m    [49m[43muse_nullable_dtypes[49m[38;5;241;43m=[39;49m[43muse_nullable_dtypes[49m[43m,[49m
[1;32m    673[0m [43m    [49m[43mdtype_backend[49m[38;5;241;43m=[39;49m[43mdtype_backend[49m[43m,[49m
[1;32m    674[0m [43m    [49m[43mfilesystem[49m[38;5;241;43m=[39;49m[43mfilesystem[49m[43m,[49m
[1;32m    675[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    676[0m [43m[49m[43m)[49m

File [0;32m~/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/pandas/io/parquet.py:267[0m, in [0;36mPyArrowImpl.read[0;34m(self, path, columns, filters, use_nullable_dtypes, dtype_backend, storage_options, filesystem, **kwargs)[0m
[1;32m    264[0m [38;5;28;01mif[39;00m manager [38;5;241m==[39m [38;5;124m"[39m[38;5;124marray[39m[38;5;124m"[39m:
[1;32m    265[0m     to_pandas_kwargs[[38;5;124m"[39m[38;5;124msplit_blocks[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28;01mTrue[39;00m  [38;5;66;03m# type: ignore[assignment][39;00m
[0;32m--> 267[0m path_or_handle, handles, filesystem [38;5;241m=[39m [43m_get_path_or_handle[49m[43m([49m
[1;32m    268[0m [43m    [49m[43mpath[49m[43m,[49m
[1;32m    269[0m [43m    [49m[43mfilesystem[49m[43m,[49m
[1;32m    270[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    271[0m [43m    [49m[43mmode[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    272[0m [43m[49m[43m)[49m
[1;32m    273[0m [38;5;28;01mtry[39;00m:
[1;32m    274[0m     pa_table [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mapi[38;5;241m.[39mparquet[38;5;241m.[39mread_table(
[1;32m    275[0m         path_or_handle,
[1;32m    276[0m         columns[38;5;241m=[39mcolumns,
[0;32m   (...)[0m
[1;32m    279[0m         [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m    280[0m     )

File [0;32m~/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/pandas/io/parquet.py:140[0m, in [0;36m_get_path_or_handle[0;34m(path, fs, storage_options, mode, is_dir)[0m
[1;32m    130[0m handles [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m    131[0m [38;5;28;01mif[39;00m (
[1;32m    132[0m     [38;5;129;01mnot[39;00m fs
[1;32m    133[0m     [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m is_dir
[0;32m   (...)[0m
[1;32m    138[0m     [38;5;66;03m# fsspec resources can also point to directories[39;00m
[1;32m    139[0m     [38;5;66;03m# this branch is used for example when reading from non-fsspec URLs[39;00m
[0;32m--> 140[0m     handles [38;5;241m=[39m [43mget_handle[49m[43m([49m
[1;32m    141[0m [43m        [49m[43mpath_or_handle[49m[43m,[49m[43m [49m[43mmode[49m[43m,[49m[43m [49m[43mis_text[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m
[1;32m    142[0m [43m    [49m[43m)[49m
[1;32m    143[0m     fs [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m    144[0m     path_or_handle [38;5;241m=[39m handles[38;5;241m.[39mhandle

File [0;32m~/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/pandas/io/common.py:728[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    725[0m     codecs[38;5;241m.[39mlookup_error(errors)
[1;32m    727[0m [38;5;66;03m# open URLs[39;00m
[0;32m--> 728[0m ioargs [38;5;241m=[39m [43m_get_filepath_or_buffer[49m[43m([49m
[1;32m    729[0m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[1;32m    730[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    731[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m    732[0m [43m    [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m    733[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    734[0m [43m[49m[43m)[49m
[1;32m    736[0m handle [38;5;241m=[39m ioargs[38;5;241m.[39mfilepath_or_buffer
[1;32m    737[0m handles: [38;5;28mlist[39m[BaseBuffer]

File [0;32m~/github_public/Metodos-Estadisticos/venv/lib/python3.10/site-packages/pandas/io/common.py:389[0m, in [0;36m_get_filepath_or_buffer[0;34m(filepath_or_buffer, encoding, compression, mode, storage_options)[0m
[1;32m    386[0m         [38;5;28;01mif[39;00m content_encoding [38;5;241m==[39m [38;5;124m"[39m[38;5;124mgzip[39m[38;5;124m"[39m:
[1;32m    387[0m             [38;5;66;03m# Override compression based on Content-Encoding header[39;00m
[1;32m    388[0m             compression [38;5;241m=[39m {[38;5;124m"[39m[38;5;124mmethod[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124mgzip[39m[38;5;124m"[39m}
[0;32m--> 389[0m         reader [38;5;241m=[39m BytesIO([43mreq[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43m)[49m)
[1;32m    390[0m     [38;5;28;01mreturn[39;00m IOArgs(
[1;32m    391[0m         filepath_or_buffer[38;5;241m=[39mreader,
[1;32m    392[0m         encoding[38;5;241m=[39mencoding,
[0;32m   (...)[0m
[1;32m    395[0m         mode[38;5;241m=[39mfsspec_mode,
[1;32m    396[0m     )
[1;32m    398[0m [38;5;28;01mif[39;00m is_fsspec_url(filepath_or_buffer):

File [0;32m/usr/lib/python3.10/http/client.py:482[0m, in [0;36mHTTPResponse.read[0;34m(self, amt)[0m
[1;32m    480[0m [38;5;28;01melse[39;00m:
[1;32m    481[0m     [38;5;28;01mtry[39;00m:
[0;32m--> 482[0m         s [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_safe_read[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mlength[49m[43m)[49m
[1;32m    483[0m     [38;5;28;01mexcept[39;00m IncompleteRead:
[1;32m    484[0m         [38;5;28mself[39m[38;5;241m.[39m_close_conn()

File [0;32m/usr/lib/python3.10/http/client.py:631[0m, in [0;36mHTTPResponse._safe_read[0;34m(self, amt)[0m
[1;32m    624[0m [38;5;28;01mdef[39;00m [38;5;21m_safe_read[39m([38;5;28mself[39m, amt):
[1;32m    625[0m [38;5;250m    [39m[38;5;124;03m"""Read the number of bytes requested.[39;00m
[1;32m    626[0m 
[1;32m    627[0m [38;5;124;03m    This function should be used when <amt> bytes "should" be present for[39;00m
[1;32m    628[0m [38;5;124;03m    reading. If the bytes are truly not available (due to EOF), then the[39;00m
[1;32m    629[0m [38;5;124;03m    IncompleteRead exception can be used to detect the problem.[39;00m
[1;32m    630[0m [38;5;124;03m    """[39;00m
[0;32m--> 631[0m     data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfp[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43mamt[49m[43m)[49m
[1;32m    632[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(data) [38;5;241m<[39m amt:
[1;32m    633[0m         [38;5;28;01mraise[39;00m IncompleteRead(data, amt[38;5;241m-[39m[38;5;28mlen[39m(data))

File [0;32m/usr/lib/python3.10/socket.py:705[0m, in [0;36mSocketIO.readinto[0;34m(self, b)[0m
[1;32m    703[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[1;32m    704[0m     [38;5;28;01mtry[39;00m:
[0;32m--> 705[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sock[49m[38;5;241;43m.[39;49m[43mrecv_into[49m[43m([49m[43mb[49m[43m)[49m
[1;32m    706[0m     [38;5;28;01mexcept[39;00m timeout:
[1;32m    707[0m         [38;5;28mself[39m[38;5;241m.[39m_timeout_occurred [38;5;241m=[39m [38;5;28;01mTrue[39;00m

File [0;32m/usr/lib/python3.10/ssl.py:1303[0m, in [0;36mSSLSocket.recv_into[0;34m(self, buffer, nbytes, flags)[0m
[1;32m   1299[0m     [38;5;28;01mif[39;00m flags [38;5;241m!=[39m [38;5;241m0[39m:
[1;32m   1300[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1301[0m           [38;5;124m"[39m[38;5;124mnon-zero flags not allowed in calls to recv_into() on [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m
[1;32m   1302[0m           [38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m)
[0;32m-> 1303[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43mnbytes[49m[43m,[49m[43m [49m[43mbuffer[49m[43m)[49m
[1;32m   1304[0m [38;5;28;01melse[39;00m:
[1;32m   1305[0m     [38;5;28;01mreturn[39;00m [38;5;28msuper[39m()[38;5;241m.[39mrecv_into(buffer, nbytes, flags)

File [0;32m/usr/lib/python3.10/ssl.py:1159[0m, in [0;36mSSLSocket.read[0;34m(self, len, buffer)[0m
[1;32m   1157[0m [38;5;28;01mtry[39;00m:
[1;32m   1158[0m     [38;5;28;01mif[39;00m buffer [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1159[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sslobj[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[38;5;28;43mlen[39;49m[43m,[49m[43m [49m[43mbuffer[49m[43m)[49m
[1;32m   1160[0m     [38;5;28;01melse[39;00m:
[1;32m   1161[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_sslobj[38;5;241m.[39mread([38;5;28mlen[39m)

[0;31mKeyboardInterrupt[0m: 

